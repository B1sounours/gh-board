{"version":3,"sources":["webpack:///3.bundle.js","webpack:///./src/components/gantt-view.jsx","webpack:///./~/d3/build/d3.js","webpack:///./src/gantt-chart.js"],"names":["webpackJsonp","1552","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","TypeError","_react","_react2","_reactDom","_reactDom2","_underscore","_underscore2","_routeUtils","_issueStore","_issueStore2","_githubClient","_helpers","_loadable","_loadable2","_labelBadge","_labelBadge2","_d2","_d3","_ganttChart","_ganttChart2","filterByMilestoneAndKanbanColumn","cards","data","columns","columnCounts","add","card","issue","milestone","column","getCardColumn","columnName","name","msCounts","title","forEach","values","GanttChart","createClass","displayName","componentDidMount","this","renderChart","componentDidUpdate","changeTimeDomain","timeDomainString","format","chart","timeDomain","time","hour","offset","maxDate","day","tickFormat","redraw","tasks","_props","props","milestones","now","Date","findDOMNode","_ganttWrapper","innerHTML","map","createdAt","dueOn","state","closedIssues","openIssues","dueAt","status","getTime","segments","count","color","accountedForCount","each","_ref","startDate","endDate","taskName","taskStatus","milestone-status-overdue","milestone-status-open","milestone-status-closed","taskNames","_ref2","sort","a","b","taskTypes","selector","render","_this","_props2","legend","label","createElement","key","extra","closedCount","className","ref","r","id","RepoKanbanShell","componentWillMount","startPolling","componentWillUnmount","stopPolling","renderLoaded","_ref3","_ref4","allMilestones","_getFilters$getState","getFilters","getState","milestoneTitles","_filterByMilestoneAnd","sortBy","_ref5","result","exec","reverse","filter","indexOf","_getFilters$getState2","repoInfos","_repoInfos","_repoInfos$","repoOwner","repoName","allPromises","Promise","all","fetchMilestones","fetchIssues","promise","1553","global","factory","ascendingComparator","f","d","x","ascending","tickStep","start","stop","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","Map","map$1","object","set","o","n","createObject","setObject","createMap","setMap","Set","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","y","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","x0","y0","x1","y1","_x","call","_y","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","c","end","apply","noabort","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","p","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","m","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","extend","definition","prototype","create","Color","trim","toLowerCase","reHex3","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","document","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","type","get","set$2","callback","noop$1","concat","objectConverter","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","ceil","d0","d1","step","range","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","width","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","domain","slice$3","has","band","rescale","range$$1","paddingInner","paddingOuter","bandwidth","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","enter","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","schedule","__transition","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","selectAll","order","tickExit","tickEnter","append","attr","line","select","text","left","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","height","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","d3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","i0","i1","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","random","sum","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","reflectX","reflectY","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","1554","milestoneCount","keyFunction","rectTransformSegment","task","prev","percent","initTimeDomain","timeDomainMode","FIT_TIME_DOMAIN_MODE","timeDomainStart","timeDomainEnd","initAxis","rangeRoundBands","margin","xAxis","tickSubdivide","yAxis","gantt","PHIL","stroke","stroke-width","rangeBand","body","ganttChartGroup","acc","ret"],"mappings":"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","file":"3.bundle.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1552:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _react = __webpack_require__(364);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(391);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _underscore = __webpack_require__(753);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _routeUtils = __webpack_require__(752);\n\t\n\tvar _issueStore = __webpack_require__(1457);\n\t\n\tvar _issueStore2 = _interopRequireDefault(_issueStore);\n\t\n\tvar _githubClient = __webpack_require__(1191);\n\t\n\tvar _githubClient2 = _interopRequireDefault(_githubClient);\n\t\n\tvar _helpers = __webpack_require__(759);\n\t\n\tvar _loadable = __webpack_require__(1501);\n\t\n\tvar _loadable2 = _interopRequireDefault(_loadable);\n\t\n\tvar _labelBadge = __webpack_require__(1496);\n\t\n\tvar _labelBadge2 = _interopRequireDefault(_labelBadge);\n\t\n\tvar _d2 = __webpack_require__(1553);\n\t\n\tvar _d3 = _interopRequireDefault(_d2);\n\t\n\tvar _ganttChart = __webpack_require__(1554);\n\t\n\tvar _ganttChart2 = _interopRequireDefault(_ganttChart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar filterByMilestoneAndKanbanColumn = function filterByMilestoneAndKanbanColumn(cards) {\n\t  var data = {};\n\t  var columns = {};\n\t  var columnCounts = {}; // key is columnName\n\t  var add = function add(card) {\n\t    if (card.issue.milestone) {\n\t      var column = (0, _helpers.getCardColumn)(card);\n\t      var columnName = column.name;\n\t      columns[columnName] = column;\n\t      var msCounts = data[card.issue.milestone.title] || {};\n\t      data[card.issue.milestone.title] = msCounts;\n\t      msCounts[columnName] = msCounts[columnName] || 0;\n\t      msCounts[columnName] += 1;\n\t\n\t      columnCounts[columnName] = columnCounts[columnName] || 0;\n\t      columnCounts[columnName] += 1;\n\t    } else {\n\t      // TODO: Should account for issues not in a milestone somehow\n\t    }\n\t  };\n\t\n\t  cards.forEach(function (card) {\n\t    add(card);\n\t  });\n\t  return { data: data, columns: _underscore2.default.values(columns), columnCounts: columnCounts };\n\t};\n\t\n\tvar GanttChart = _react2.default.createClass({\n\t  displayName: 'GanttChart',\n\t  componentDidMount: function componentDidMount() {\n\t    this.renderChart();\n\t  },\n\t  componentDidUpdate: function componentDidUpdate() {\n\t    this.renderChart();\n\t  },\n\t  renderChart: function renderChart() {\n\t    var _props = this.props,\n\t        milestones = _props.milestones,\n\t        data = _props.data,\n\t        columns = _props.columns;\n\t\n\t    var now = new Date();\n\t\n\t    _reactDom2.default.findDOMNode(this._ganttWrapper).innerHTML = '';\n\t\n\t    var tasks = milestones.map(function (milestone) {\n\t      var createdAt = milestone.createdAt,\n\t          dueOn = milestone.dueOn,\n\t          title = milestone.title,\n\t          state = milestone.state,\n\t          closedIssues = milestone.closedIssues,\n\t          openIssues = milestone.openIssues;\n\t\n\t      var dueAt = dueOn ? new Date(dueOn) : null;\n\t      var status = void 0;\n\t      if (dueAt && dueAt.getTime() < now.getTime()) {\n\t        status = 'milestone-status-overdue';\n\t      } else {\n\t        status = 'milestone-status-' + state;\n\t      }\n\t      var segments = [];\n\t      if (closedIssues) {\n\t        segments.push({ count: closedIssues, color: '666666', title: 'Closed Issues' });\n\t      }\n\t      var accountedForCount = 0;\n\t      _underscore2.default.each(columns, function (_ref) {\n\t        var name = _ref.name,\n\t            color = _ref.color;\n\t\n\t        if (data[milestone.title]) {\n\t          var count = data[milestone.title][name] || 0;\n\t          if (count) {\n\t            accountedForCount += count;\n\t            segments.push({ count: count, color: color, title: name });\n\t          }\n\t        }\n\t      });\n\t      if (accountedForCount !== openIssues) {\n\t        segments.push({ count: openIssues - accountedForCount, color: 'ffffff', title: 'Other Open Issues' });\n\t      }\n\t      return {\n\t        startDate: createdAt,\n\t        endDate: dueAt || now,\n\t        taskName: title,\n\t        status: status,\n\t        segments: segments\n\t      };\n\t    });\n\t\n\t    var taskStatus = {\n\t      'milestone-status-overdue': 'milestone-status-overdue',\n\t      'milestone-status-open': 'milestone-status-open',\n\t      'milestone-status-closed': 'milestone-status-closed'\n\t    };\n\t\n\t    var taskNames = tasks.map(function (_ref2) {\n\t      var taskName = _ref2.taskName;\n\t      return taskName;\n\t    }).sort();\n\t\n\t    tasks.sort(function (a, b) {\n\t      return a.endDate - b.endDate;\n\t    });\n\t    var maxDate = tasks[tasks.length - 1].endDate;\n\t    tasks.sort(function (a, b) {\n\t      return a.startDate - b.startDate;\n\t    });\n\t    // const minDate = tasks[0].startDate;\n\t\n\t    var format = '%H:%M';\n\t\n\t    var chart = (0, _ganttChart2.default)(taskNames.length).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format).selector('#the-gantt-chart');\n\t    chart(tasks);\n\t\n\t    function changeTimeDomain(timeDomainString) {\n\t      var format = void 0;\n\t      switch (timeDomainString) {\n\t        case '1hr':\n\t          format = '%H:%M:%S';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -1), maxDate]);\n\t          break;\n\t        case '3hr':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -3), maxDate]);\n\t          break;\n\t\n\t        case '6hr':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -6), maxDate]);\n\t          break;\n\t\n\t        case '1day':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.day.offset(maxDate, -1), maxDate]);\n\t          break;\n\t\n\t        case '1week':\n\t          format = '%m/%d';\n\t          chart.timeDomain([_d3.default.time.day.offset(maxDate, -7), maxDate]);\n\t          break;\n\t        default:\n\t          format = '%H:%M';\n\t\n\t      }\n\t      chart.tickFormat(format);\n\t      chart.redraw(tasks);\n\t    }\n\t\n\t    changeTimeDomain('1week');\n\t  },\n\t  render: function render() {\n\t    var _this = this;\n\t\n\t    var _props2 = this.props,\n\t        columns = _props2.columns,\n\t        columnCounts = _props2.columnCounts,\n\t        milestones = _props2.milestones;\n\t\n\t\n\t    var legend = columns.map(function (label) {\n\t      return _react2.default.createElement(_labelBadge2.default, { key: label.name, label: label, extra: columnCounts[label.name] });\n\t    });\n\t    var closedCount = 0;\n\t    milestones.forEach(function (milestone) {\n\t      closedCount += milestone.closedIssues;\n\t    });\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: '-gantt-chart-and-legend' },\n\t      _react2.default.createElement('div', { ref: function ref(r) {\n\t          return _this._ganttWrapper = r;\n\t        }, id: 'the-gantt-chart' }),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        'Legend'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Blue vertical line is Today'\n\t      ),\n\t      _react2.default.createElement(_labelBadge2.default, { key: 'completed', label: { name: '0 - Closed', color: '666666' }, extra: closedCount }),\n\t      legend,\n\t      _react2.default.createElement('br', null),\n\t      _react2.default.createElement('br', null)\n\t    );\n\t  }\n\t});\n\t\n\tvar RepoKanbanShell = _react2.default.createClass({\n\t  displayName: 'RepoKanbanShell',\n\t  componentWillMount: function componentWillMount() {\n\t    // Needs to be called before `render()`\n\t    _issueStore2.default.startPolling();\n\t  },\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    _issueStore2.default.stopPolling();\n\t  },\n\t  renderLoaded: function renderLoaded(_ref3) {\n\t    var _ref4 = _slicedToArray(_ref3, 2),\n\t        allMilestones = _ref4[0],\n\t        cards = _ref4[1];\n\t\n\t    var _getFilters$getState = (0, _routeUtils.getFilters)().getState(),\n\t        milestoneTitles = _getFilters$getState.milestoneTitles;\n\t\n\t    var _filterByMilestoneAnd = filterByMilestoneAndKanbanColumn(cards),\n\t        data = _filterByMilestoneAnd.data,\n\t        columns = _filterByMilestoneAnd.columns,\n\t        columnCounts = _filterByMilestoneAnd.columnCounts;\n\t    // COPYPASTA: Taken from repo-kanban\n\t\n\t\n\t    columns = _underscore2.default.sortBy(columns, function (_ref5) {\n\t      var name = _ref5.name;\n\t\n\t      if (name === _helpers.UNCATEGORIZED_NAME) {\n\t        // make sure Uncategorized is the left-most column\n\t        return -1;\n\t      } else {\n\t        var result = /^(\\d+)/.exec(name);\n\t        return result && result[1] || name;\n\t      }\n\t    });\n\t    columns = columns.reverse();\n\t\n\t    // Remove milestones that are not in the URL filter\n\t    var milestones = void 0;\n\t    if (milestoneTitles.length > 0) {\n\t      milestones = allMilestones.filter(function (milestone) {\n\t        return milestoneTitles.indexOf(milestone.title) >= 0;\n\t      });\n\t    } else {\n\t      milestones = allMilestones;\n\t    }\n\t\n\t    return _react2.default.createElement(GanttChart, { milestones: milestones, data: data, columns: columns, columnCounts: columnCounts });\n\t  },\n\t  render: function render() {\n\t    var _getFilters$getState2 = (0, _routeUtils.getFilters)().getState(),\n\t        repoInfos = _getFilters$getState2.repoInfos;\n\t    // Get the \"Primary\" repo for milestones and labels\n\t\n\t\n\t    var _repoInfos = _slicedToArray(repoInfos, 1),\n\t        _repoInfos$ = _repoInfos[0],\n\t        repoOwner = _repoInfos$.repoOwner,\n\t        repoName = _repoInfos$.repoName;\n\t\n\t    // TODO: Actually do all the milestones\n\t\n\t\n\t    var allPromises = Promise.all([_issueStore2.default.fetchMilestones(repoOwner, repoName), _issueStore2.default.fetchIssues()]);\n\t\n\t    return _react2.default.createElement(_loadable2.default, {\n\t      promise: allPromises,\n\t      renderLoaded: this.renderLoaded\n\t    });\n\t  }\n\t});\n\t\n\texports.default = RepoKanbanShell;\n\n/***/ },\n\n/***/ 1553:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.4.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n\n/***/ 1554:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (milestoneCount) {\n\t  var FIT_TIME_DOMAIN_MODE = 'fit';\n\t  var FIXED_TIME_DOMAIN_MODE = 'fixed';\n\t\n\t  var margin = {\n\t    top: 20,\n\t    right: 40,\n\t    bottom: 20,\n\t    left: 250\n\t  };\n\t  var selector = 'body';\n\t  var timeDomainStart = _d2.default.time.day.offset(new Date(), -3);\n\t  var timeDomainEnd = _d2.default.time.hour.offset(new Date(), +3);\n\t  var timeDomainMode = FIT_TIME_DOMAIN_MODE; // fixed or fit\n\t  var taskTypes = [];\n\t  var taskStatus = [];\n\t  // var height = document.body.clientHeight - margin.top - margin.bottom-5;\n\t  var height = milestoneCount * 50; // height of chart is based on # of milestones\n\t  var width = document.body.clientWidth - margin.right - margin.left - 5;\n\t\n\t  var tickFormat = '%H:%M';\n\t\n\t  function keyFunction(d) {\n\t    return d.startDate + d.taskName + d.endDate;\n\t  };\n\t\n\t  function rectTransform(d) {\n\t    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n\t  };\n\t  function rectTransformCompleted(d) {\n\t    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n\t  };\n\t  function rectTransformRemaining(d) {\n\t    return 'translate(' + (x(d.startDate) + d.percent * (x(d.endDate) - x(d.startDate))) + ',' + y(d.taskName) + ')';\n\t  };\n\t  function rectTransformSegment(_ref) {\n\t    var task = _ref.task,\n\t        segment = _ref.segment,\n\t        total = _ref.total,\n\t        prev = _ref.prev;\n\t\n\t    var percent = prev / total;\n\t    return 'translate(' + (x(task.startDate) + percent * (x(task.endDate) - x(task.startDate))) + ',' + y(task.taskName) + ')';\n\t  };\n\t\n\t  var x = _d2.default.time.scale().domain([timeDomainStart, timeDomainEnd]).range([0, width]).clamp(true);\n\t\n\t  var y = _d2.default.scale.ordinal().domain(taskTypes).rangeRoundBands([0, height - margin.top - margin.bottom], .1);\n\t\n\t  var xAxis = _d2.default.svg.axis().scale(x).orient('bottom').tickFormat(_d2.default.time.format(tickFormat)).tickSubdivide(true).tickSize(8).tickPadding(8);\n\t\n\t  var yAxis = _d2.default.svg.axis().scale(y).orient('right').tickSize(0);\n\t\n\t  function initTimeDomain(tasks) {\n\t    if (timeDomainMode === FIT_TIME_DOMAIN_MODE) {\n\t      if (tasks === undefined || tasks.length < 1) {\n\t        timeDomainStart = _d2.default.time.day.offset(new Date(), -3);\n\t        timeDomainEnd = _d2.default.time.hour.offset(new Date(), +3);\n\t        return;\n\t      }\n\t      tasks = tasks.sort(function (a, b) {\n\t        return a.endDate - b.endDate;\n\t      });\n\t      timeDomainEnd = tasks[tasks.length - 1].endDate;\n\t      tasks = tasks.sort(function (a, b) {\n\t        return a.startDate - b.startDate;\n\t      });\n\t      timeDomainStart = tasks[0].startDate;\n\t    }\n\t  };\n\t\n\t  function initAxis() {\n\t    x = _d2.default.time.scale().domain([timeDomainStart, timeDomainEnd]).range([0, width]).clamp(true);\n\t    y = _d2.default.scale.ordinal().domain(taskTypes).rangeRoundBands([0, height - margin.top - margin.bottom], .1);\n\t    xAxis = _d2.default.svg.axis().scale(x).orient('bottom').tickFormat(_d2.default.time.format(tickFormat)).tickSubdivide(true).tickSize(8).tickPadding(8);\n\t\n\t    yAxis = _d2.default.svg.axis().scale(y).orient('right').tickSize(0);\n\t  };\n\t\n\t  function gantt(tasks) {\n\t    initTimeDomain(tasks);\n\t    initAxis();\n\t\n\t    var svg = _d2.default.select(selector).append('svg').attr('class', 'chart').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('class', 'gantt-chart').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\t\n\t    var PHIL = svg.selectAll('.chart');\n\t\n\t    PHIL.select('line.today').data([new Date()]).enter().append('line').attr('class', 'today').attr('x1', function (d) {\n\t      return x(d);\n\t    }).attr('x2', function (d) {\n\t      return x(d);\n\t    }).attr('y1', 0).attr('y2', height).style({ stroke: 'rgb(0,0,255)', 'stroke-width': 2 });\n\t\n\t    PHIL.selectAll('g.milestone-bars').data(tasks, keyFunction).enter().append('g')\n\t    //  .attr(\"rx\", 5)\n\t    //        .attr(\"ry\", 5)\n\t    .attr('class', 'milestone-bars')\n\t    //  .attr(\"y\", 0)\n\t    //  .attr(\"transform\", rectTransformCompleted)\n\t    //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    //  .attr(\"width\", function(d) {\n\t    //      return d.percent * (x(d.endDate) - x(d.startDate));\n\t    //    })\n\t    .selectAll('rect').data(function (task) {\n\t      task.segments.map(function (segment) {\n\t        return { task: task, segment: segment };\n\t      });\n\t    }).enter().append('rect').attr('class', 'milestone-segment').style(function (_ref2) {\n\t      var task = _ref2.task,\n\t          segment = _ref2.segment;\n\t      return { fill: segment.color };\n\t    }).attr('transform', rectTransformSegment).attr('height', function (d) {\n\t      return y.rangeBand();\n\t    }).attr('width', function (_ref3) {\n\t      var task = _ref3.task,\n\t          total = _ref3.total,\n\t          segment = _ref3.segment;\n\t\n\t      var percent = segment.count / total;\n\t      return percent * (x(task.endDate) - x(task.startDate));\n\t    });\n\t\n\t    // PHIL: Copy-pasta to show the 2nd half of the milestone (unfinished)\n\t    //   PHIL.selectAll('rect.milestone-remaining').data(tasks, keyFunction).enter()\n\t    //\n\t    // \t .append(\"rect\")\n\t    // // \t .attr(\"rx\", 5)\n\t    //  //         .attr(\"ry\", 5)\n\t    // \t .attr(\"class\", function(d){\n\t    // \t     return 'milestone-remaining ' + d.status;\n\t    // \t     })\n\t    // \t .attr(\"y\", 0)\n\t    // \t .attr(\"transform\", rectTransformRemaining)\n\t    // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // \t .attr(\"width\", function(d) {\n\t    // \t     return (1-d.percent) * (x(d.endDate) - x(d.startDate));\n\t    // \t     });\n\t\n\t\n\t    svg.append('g').attr('class', 'x axis').attr('transform', 'translate(0, ' + (height - margin.top - margin.bottom) + ')').transition().call(xAxis);\n\t\n\t    svg.append('g').attr('class', 'y axis').attr('transform', 'translate(-' + margin.left + ',0)').transition().call(yAxis);\n\t\n\t    return gantt;\n\t  };\n\t\n\t  gantt.redraw = function (tasks) {\n\t\n\t    initTimeDomain(tasks);\n\t    initAxis();\n\t\n\t    var svg = _d2.default.select('.chart');\n\t\n\t    var ganttChartGroup = svg.select('.gantt-chart');\n\t    var rect = ganttChartGroup.selectAll('g.milestone-bars').data(tasks, keyFunction);\n\t\n\t    rect.enter().append('g').attr('class', 'milestone-bars')\n\t    // \t .attr(\"y\", 0)\n\t    // \t .attr(\"transform\", rectTransformCompleted)\n\t    // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // \t .attr(\"width\", function(d) {\n\t    // \t     return d.percent * (x(d.endDate) - x(d.startDate));\n\t    //     })\n\t    .selectAll('rect').data(function (task) {\n\t      var total = task.segments.reduce(function (acc, segment) {\n\t        return acc + segment.count;\n\t      }, 0);\n\t      var prev = 0;\n\t      var segments = task.segments.map(function (segment) {\n\t        var ret = { task: task, segment: segment, prev: prev, total: total };\n\t        prev += segment.count;\n\t        return ret;\n\t      });\n\t      return segments;\n\t    }).enter().append('rect')\n\t    //  .attr('class', 'milestone-segment')\n\t    .style('fill', function (_ref4) {\n\t      var task = _ref4.task,\n\t          segment = _ref4.segment;\n\t      return '#' + segment.color;\n\t    })\n\t    // .attr('class', ({task, segment}) => {return {fill: segment.color}; })\n\t    // .transform()\n\t    .attr('transform', rectTransformSegment).attr('height', function (d) {\n\t      return y.rangeBand();\n\t    }).attr('width', function (_ref5) {\n\t      var task = _ref5.task,\n\t          total = _ref5.total,\n\t          segment = _ref5.segment;\n\t\n\t      var percent = segment.count / total;\n\t      return percent * (x(task.endDate) - x(task.startDate));\n\t    });\n\t\n\t    //       rect.enter()\n\t    //        .append(\"rect\")\n\t    //  .attr(\"class\", function(d){\n\t    //      return 'milestone-bars ' +d.status;\n\t    //      })\n\t    //  .transition()\n\t    //  .attr(\"y\", 0)\n\t    //  .attr(\"transform\", rectTransformCompleted)\n\t    //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    //  .attr(\"width\", function(d) {\n\t    //      return d.percent*(x(d.endDate) - x(d.startDate));\n\t    //      });\n\t    //\n\t    //       rect.transition()\n\t    //         .attr(\"transform\", rectTransform)\n\t    //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    //  .attr(\"width\", function(d) {\n\t    //      return d.percent*(x(d.endDate) - x(d.startDate));\n\t    //      });\n\t\n\t    // \trect.exit().remove();\n\t    //\n\t    //   //PHIL Copy-pasta\n\t    //   var rect = ganttChartGroup.selectAll(\"rect.milestone-remaining\").data(tasks, keyFunction);\n\t    //\n\t    //   rect.enter()\n\t    //    .append(\"rect\")\n\t    //    .attr(\"rx\", 5)\n\t    //    .attr(\"ry\", 5)\n\t    // .attr(\"class\", function(d){\n\t    //  return 'milestone-remaining ' +d.status;\n\t    //  })\n\t    // .transition()\n\t    // .attr(\"y\", 0)\n\t    // .attr(\"transform\", rectTransformRemaining)\n\t    // .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // .attr(\"width\", function(d) {\n\t    //  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n\t    //  });\n\t    //\n\t    //   rect.transition()\n\t    //     .attr(\"transform\", rectTransformRemaining)\n\t    // .attr(\"height\", function(d) { return y.rangeBand(); })\n\t    // .attr(\"width\", function(d) {\n\t    //  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n\t    //  });\n\t    //\n\t    // rect.exit().remove();\n\t\n\t\n\t    svg.select('.x').transition().call(xAxis);\n\t    svg.select('.y').transition().call(yAxis);\n\t\n\t    return gantt;\n\t  };\n\t\n\t  gantt.margin = function (value) {\n\t    if (!arguments.length) return margin;\n\t    margin = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.timeDomain = function (value) {\n\t    if (!arguments.length) return [timeDomainStart, timeDomainEnd];\n\t    timeDomainStart = +value[0], timeDomainEnd = +value[1];\n\t    return gantt;\n\t  };\n\t\n\t  /**\n\t   * @param {string}\n\t   *                value The value can be \"fit\" - the domain fits the data or\n\t   *                \"fixed\" - fixed domain.\n\t   */\n\t  gantt.timeDomainMode = function (value) {\n\t    if (!arguments.length) return timeDomainMode;\n\t    timeDomainMode = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.taskTypes = function (value) {\n\t    if (!arguments.length) return taskTypes;\n\t    taskTypes = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.taskStatus = function (value) {\n\t    if (!arguments.length) return taskStatus;\n\t    taskStatus = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.width = function (value) {\n\t    if (!arguments.length) return width;\n\t    width = +value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.height = function (value) {\n\t    if (!arguments.length) return height;\n\t    height = +value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.tickFormat = function (value) {\n\t    if (!arguments.length) return tickFormat;\n\t    tickFormat = value;\n\t    return gantt;\n\t  };\n\t\n\t  gantt.selector = function (value) {\n\t    if (!arguments.length) return selector;\n\t    selector = value;\n\t    return gantt;\n\t  };\n\t\n\t  return gantt;\n\t};\n\t\n\tvar _d = __webpack_require__(1553);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t;\n\t/**\n\t * From https://github.com/dk8996/Gantt-Chart\n\t * @author Dimitry Kudrayvtsev\n\t * @version 2.x\n\t */\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.bundle.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'underscore';\n\nimport {getFilters} from '../route-utils';\nimport IssueStore from '../issue-store';\nimport Client from '../github-client';\nimport {getCardColumn, UNCATEGORIZED_NAME} from '../helpers';\nimport Loadable from './loadable';\nimport LabelBadge from './label-badge';\n\nimport d3 from 'd3';\nimport gantt from '../gantt-chart';\n\n\nconst filterByMilestoneAndKanbanColumn = (cards) => {\n  const data = {};\n  const columns = {};\n  const columnCounts = {}; // key is columnName\n  const add = (card) => {\n    if (card.issue.milestone) {\n      const column = getCardColumn(card);\n      const columnName = column.name;\n      columns[columnName] = column;\n      const msCounts = data[card.issue.milestone.title] || {};\n      data[card.issue.milestone.title] = msCounts;\n      msCounts[columnName] = msCounts[columnName] || 0;\n      msCounts[columnName] += 1;\n\n      columnCounts[columnName] = columnCounts[columnName] || 0;\n      columnCounts[columnName] += 1;\n    } else {\n      // TODO: Should account for issues not in a milestone somehow\n    }\n  };\n\n  cards.forEach((card) => {\n    add(card);\n  });\n  return {data, columns: _.values(columns), columnCounts};\n};\n\n\nconst GanttChart = React.createClass({\n  componentDidMount() {\n    this.renderChart();\n  },\n  componentDidUpdate() {\n    this.renderChart();\n  },\n  renderChart() {\n    const {milestones, data, columns} = this.props;\n    const now = new Date();\n\n    ReactDOM.findDOMNode(this._ganttWrapper).innerHTML = '';\n\n    const tasks = milestones.map((milestone) => {\n      const {createdAt, dueOn, title, state, closedIssues, openIssues} = milestone;\n      const dueAt = dueOn ? new Date(dueOn) : null;\n      let status;\n      if (dueAt && dueAt.getTime() < now.getTime()) {\n        status = 'milestone-status-overdue';\n      } else {\n        status = `milestone-status-${state}`;\n      }\n      const segments = [];\n      if (closedIssues) {\n        segments.push({count: closedIssues, color: '666666', title: 'Closed Issues'});\n      }\n      let accountedForCount = 0;\n      _.each(columns, ({name, color}) => {\n        if (data[milestone.title]) {\n          const count = data[milestone.title][name] || 0;\n          if (count) {\n            accountedForCount += count;\n            segments.push({count, color, title:name});\n          }\n        }\n      });\n      if (accountedForCount !== openIssues) {\n        segments.push({count: openIssues - accountedForCount, color: 'ffffff', title: 'Other Open Issues'});\n      }\n      return {\n        startDate: createdAt,\n        endDate: dueAt || now,\n        taskName: title,\n        status: status,\n        segments: segments\n      };\n    });\n\n    const taskStatus = {\n      'milestone-status-overdue': 'milestone-status-overdue',\n      'milestone-status-open' : 'milestone-status-open',\n      'milestone-status-closed' : 'milestone-status-closed'\n    };\n\n    const taskNames = tasks.map(({taskName}) => taskName).sort();\n\n    tasks.sort(function(a, b) {\n      return a.endDate - b.endDate;\n    });\n    const maxDate = tasks[tasks.length - 1].endDate;\n    tasks.sort(function(a, b) {\n      return a.startDate - b.startDate;\n    });\n    // const minDate = tasks[0].startDate;\n\n    const format = '%H:%M';\n\n    const chart = gantt(taskNames.length).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format).selector('#the-gantt-chart');\n    chart(tasks);\n\n\n    function changeTimeDomain(timeDomainString) {\n      let format;\n      switch (timeDomainString) {\n      case '1hr':\n        \tformat = '%H:%M:%S';\n        \tchart.timeDomain([ d3.time.hour.offset(maxDate, -1), maxDate ]);\n        \tbreak;\n      case '3hr':\n        \tformat = '%H:%M';\n        \tchart.timeDomain([ d3.time.hour.offset(maxDate, -3), maxDate ]);\n        \tbreak;\n\n      case '6hr':\n        \tformat = '%H:%M';\n        \tchart.timeDomain([ d3.time.hour.offset(maxDate, -6), maxDate ]);\n        \tbreak;\n\n      case '1day':\n        \tformat = '%H:%M';\n        \tchart.timeDomain([ d3.time.day.offset(maxDate, -1), maxDate ]);\n        \tbreak;\n\n      case '1week':\n        \tformat = '%m/%d';\n        \tchart.timeDomain([ d3.time.day.offset(maxDate, -7), maxDate ]);\n        \tbreak;\n      default:\n        \tformat = '%H:%M';\n\n      }\n      chart.tickFormat(format);\n      chart.redraw(tasks);\n    }\n\n    changeTimeDomain('1week');\n\n  },\n  render() {\n    const {columns, columnCounts, milestones} = this.props;\n\n    const legend = columns.map((label) => {\n      return (\n        <LabelBadge key={label.name} label={label} extra={columnCounts[label.name]}/>\n      );\n    });\n    let closedCount = 0;\n    milestones.forEach((milestone) => {\n      closedCount += milestone.closedIssues;\n    });\n    return (\n      <div className='-gantt-chart-and-legend'>\n        <div ref={r => this._ganttWrapper = r} id='the-gantt-chart'/>\n        <h3>Legend</h3>\n        <p>Blue vertical line is Today</p>\n        <LabelBadge key='completed' label={{name:'0 - Closed', color: '666666'}} extra={closedCount}/>\n        {legend}\n        <br/>{/* Add breaks to increase padding because I'm lazy and don't want to add CSS margins */}\n        <br/>\n      </div>\n    );\n  }\n\n});\n\nconst RepoKanbanShell = React.createClass({\n  componentWillMount() {\n    // Needs to be called before `render()`\n    IssueStore.startPolling();\n  },\n  componentWillUnmount() {\n    IssueStore.stopPolling();\n  },\n  renderLoaded([allMilestones, cards]) {\n    const {milestoneTitles} = getFilters().getState();\n\n    let {data, columns, columnCounts} = filterByMilestoneAndKanbanColumn(cards);\n    // COPYPASTA: Taken from repo-kanban\n    columns = _.sortBy(columns, ({name}) => {\n      if (name === UNCATEGORIZED_NAME) {\n        // make sure Uncategorized is the left-most column\n        return -1;\n      } else {\n        const result = /^(\\d+)/.exec(name);\n        return result && result[1] || name;\n      }\n    });\n    columns = columns.reverse();\n\n    // Remove milestones that are not in the URL filter\n    let milestones;\n    if (milestoneTitles.length > 0) {\n      milestones = allMilestones.filter((milestone) => {\n        return milestoneTitles.indexOf(milestone.title) >= 0;\n      });\n    } else {\n      milestones = allMilestones;\n    }\n\n    return (\n      <GanttChart milestones={milestones} data={data} columns={columns} columnCounts={columnCounts}/>\n    );\n  },\n  render() {\n    const {repoInfos} = getFilters().getState();\n    // Get the \"Primary\" repo for milestones and labels\n    const [{repoOwner, repoName}] = repoInfos;\n\n    // TODO: Actually do all the milestones\n    const allPromises = Promise.all([IssueStore.fetchMilestones(repoOwner, repoName), IssueStore.fetchIssues()]);\n\n    return (\n      <Loadable\n        promise={allPromises}\n        renderLoaded={this.renderLoaded}\n      />\n    );\n  }\n});\n\nexport default RepoKanbanShell;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/gantt-view.jsx","// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1553\n// module chunks = 3","import d3 from 'd3';\n/**\n * From https://github.com/dk8996/Gantt-Chart\n * @author Dimitry Kudrayvtsev\n * @version 2.x\n */\n\nexport default function(milestoneCount) {\n  const FIT_TIME_DOMAIN_MODE = 'fit';\n  const FIXED_TIME_DOMAIN_MODE = 'fixed';\n\n  let margin = {\n    top : 20,\n    right : 40,\n    bottom : 20,\n    left : 250\n  };\n  let selector = 'body';\n  let timeDomainStart = d3.time.day.offset(new Date(),-3);\n  let timeDomainEnd = d3.time.hour.offset(new Date(),+3);\n  let timeDomainMode = FIT_TIME_DOMAIN_MODE;// fixed or fit\n  let taskTypes = [];\n  let taskStatus = [];\n    // var height = document.body.clientHeight - margin.top - margin.bottom-5;\n  let height = milestoneCount * 50; // height of chart is based on # of milestones\n  let width = document.body.clientWidth - margin.right - margin.left-5;\n\n  let tickFormat = '%H:%M';\n\n  function keyFunction(d) {\n    return d.startDate + d.taskName + d.endDate;\n  };\n\n  function rectTransform(d) {\n    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n  };\n  function rectTransformCompleted(d) {\n    return 'translate(' + x(d.startDate) + ',' + y(d.taskName) + ')';\n  };\n  function rectTransformRemaining(d) {\n    return 'translate(' + (x(d.startDate) + d.percent * (x(d.endDate)-x(d.startDate))) + ',' + y(d.taskName) + ')';\n  };\n  function rectTransformSegment({task, segment, total, prev}) {\n    const percent = prev / total;\n    return 'translate(' + (x(task.startDate) + percent * (x(task.endDate)-x(task.startDate))) + ',' + y(task.taskName) + ')';\n  };\n\n  let x = d3.time.scale().domain([ timeDomainStart, timeDomainEnd ]).range([ 0, width ]).clamp(true);\n\n  let y = d3.scale.ordinal().domain(taskTypes).rangeRoundBands([ 0, height - margin.top - margin.bottom ], .1);\n\n  let xAxis = d3.svg.axis().scale(x).orient('bottom').tickFormat(d3.time.format(tickFormat)).tickSubdivide(true)\n\t    .tickSize(8).tickPadding(8);\n\n  let yAxis = d3.svg.axis().scale(y).orient('right').tickSize(0);\n\n  function initTimeDomain(tasks) {\n    if (timeDomainMode === FIT_TIME_DOMAIN_MODE) {\n      if (tasks === undefined || tasks.length < 1) {\n        timeDomainStart = d3.time.day.offset(new Date(), -3);\n        timeDomainEnd = d3.time.hour.offset(new Date(), +3);\n        return;\n      }\n      tasks = tasks.sort(function(a, b) {\n        return a.endDate - b.endDate;\n      });\n      timeDomainEnd = tasks[tasks.length - 1].endDate;\n      tasks = tasks.sort(function(a, b) {\n        return a.startDate - b.startDate;\n      });\n      timeDomainStart = tasks[0].startDate;\n    }\n  };\n\n  function initAxis() {\n    x = d3.time.scale().domain([ timeDomainStart, timeDomainEnd ]).range([ 0, width ]).clamp(true);\n    y = d3.scale.ordinal().domain(taskTypes).rangeRoundBands([ 0, height - margin.top - margin.bottom ], .1);\n    xAxis = d3.svg.axis().scale(x).orient('bottom').tickFormat(d3.time.format(tickFormat)).tickSubdivide(true)\n\t\t  .tickSize(8).tickPadding(8);\n\n    yAxis = d3.svg.axis().scale(y).orient('right').tickSize(0);\n  };\n\n  function gantt(tasks) {\n    initTimeDomain(tasks);\n    initAxis();\n\n    const svg = d3.select(selector)\n\t    .append('svg')\n\t    .attr('class', 'chart')\n\t    .attr('width', width + margin.left + margin.right)\n    \t.attr('height', height + margin.top + margin.bottom)\n    \t.append('g')\n      .attr('class', 'gantt-chart')\n    \t.attr('width', width + margin.left + margin.right)\n    \t.attr('height', height + margin.top + margin.bottom)\n    \t.attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\n    const PHIL = svg.selectAll('.chart');\n\n    PHIL.select('line.today').data([new Date()]).enter()\n      .append('line')\n      .attr('class', 'today')\n      .attr('x1', (d) => x(d))\n      .attr('x2', (d) => x(d))\n      .attr('y1', 0)\n      .attr('y2', height)\n      .style({stroke:'rgb(0,0,255)', 'stroke-width':2});\n\n    PHIL.selectAll('g.milestone-bars').data(tasks, keyFunction).enter()\n  \t  .append('g')\n  \t//  .attr(\"rx\", 5)\n    //        .attr(\"ry\", 5)\n  \t  .attr('class', 'milestone-bars')\n  \t//  .attr(\"y\", 0)\n  \t//  .attr(\"transform\", rectTransformCompleted)\n  \t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n  \t//  .attr(\"width\", function(d) {\n  \t//      return d.percent * (x(d.endDate) - x(d.startDate));\n    //    })\n      .selectAll('rect').data((task) => {task.segments.map((segment) => ({task, segment}));}).enter()\n      .append('rect')\n      .attr('class', 'milestone-segment')\n      .style(({task, segment}) => ({fill: segment.color}))\n      .attr('transform', rectTransformSegment)\n      .attr('height', (d) => y.rangeBand())\n      .attr('width', ({task, total, segment}) => {\n        const percent = segment.count / total;\n        return percent * (x(task.endDate) - x(task.startDate));\n      });\n\n\n   // PHIL: Copy-pasta to show the 2nd half of the milestone (unfinished)\n //   PHIL.selectAll('rect.milestone-remaining').data(tasks, keyFunction).enter()\n //\n // \t .append(\"rect\")\n // // \t .attr(\"rx\", 5)\n //  //         .attr(\"ry\", 5)\n // \t .attr(\"class\", function(d){\n // \t     return 'milestone-remaining ' + d.status;\n // \t     })\n // \t .attr(\"y\", 0)\n // \t .attr(\"transform\", rectTransformRemaining)\n // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n // \t .attr(\"width\", function(d) {\n // \t     return (1-d.percent) * (x(d.endDate) - x(d.startDate));\n // \t     });\n\n\n    svg.append('g')\n  \t  .attr('class', 'x axis')\n  \t  .attr('transform', 'translate(0, ' + (height - margin.top - margin.bottom) + ')')\n  \t  .transition()\n  \t  .call(xAxis);\n\n    svg.append('g').attr('class', 'y axis').attr('transform', 'translate(-' + margin.left + ',0)').transition().call(yAxis);\n\n    return gantt;\n  };\n\n  gantt.redraw = function(tasks) {\n\n    initTimeDomain(tasks);\n    initAxis();\n\n    const svg = d3.select('.chart');\n\n    const ganttChartGroup = svg.select('.gantt-chart');\n    const rect = ganttChartGroup.selectAll('g.milestone-bars').data(tasks, keyFunction);\n\n    rect.enter()\n      .append('g')\n      .attr('class', 'milestone-bars')\n       // \t .attr(\"y\", 0)\n       // \t .attr(\"transform\", rectTransformCompleted)\n       // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n       // \t .attr(\"width\", function(d) {\n       // \t     return d.percent * (x(d.endDate) - x(d.startDate));\n        //     })\n      .selectAll('rect').data((task) => {\n        const total = task.segments.reduce((acc, segment) => acc + segment.count, 0);\n        let prev = 0;\n        const segments = task.segments.map((segment) => {\n          const ret = {task, segment, prev, total};\n          prev += segment.count;\n          return ret;\n        });\n        return segments;\n      }).enter()\n     .append('rect')\n          //  .attr('class', 'milestone-segment')\n      .style('fill', ({task, segment}) => `#${segment.color}`)\n          // .attr('class', ({task, segment}) => {return {fill: segment.color}; })\n           // .transform()\n      .attr('transform', rectTransformSegment)\n      .attr('height', (d) => y.rangeBand())\n      .attr('width', ({task, total, segment}) => {\n        const percent = segment.count / total;\n        return percent * (x(task.endDate) - x(task.startDate));\n      });\n\n\n  //       rect.enter()\n  //        .append(\"rect\")\n\t//  .attr(\"class\", function(d){\n\t//      return 'milestone-bars ' +d.status;\n\t//      })\n\t//  .transition()\n\t//  .attr(\"y\", 0)\n\t//  .attr(\"transform\", rectTransformCompleted)\n\t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t//  .attr(\"width\", function(d) {\n\t//      return d.percent*(x(d.endDate) - x(d.startDate));\n\t//      });\n   //\n  //       rect.transition()\n  //         .attr(\"transform\", rectTransform)\n\t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t//  .attr(\"width\", function(d) {\n\t//      return d.percent*(x(d.endDate) - x(d.startDate));\n\t//      });\n\n// \trect.exit().remove();\n//\n//   //PHIL Copy-pasta\n//   var rect = ganttChartGroup.selectAll(\"rect.milestone-remaining\").data(tasks, keyFunction);\n//\n//   rect.enter()\n//    .append(\"rect\")\n//    .attr(\"rx\", 5)\n//    .attr(\"ry\", 5)\n// .attr(\"class\", function(d){\n//  return 'milestone-remaining ' +d.status;\n//  })\n// .transition()\n// .attr(\"y\", 0)\n// .attr(\"transform\", rectTransformRemaining)\n// .attr(\"height\", function(d) { return y.rangeBand(); })\n// .attr(\"width\", function(d) {\n//  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n//  });\n//\n//   rect.transition()\n//     .attr(\"transform\", rectTransformRemaining)\n// .attr(\"height\", function(d) { return y.rangeBand(); })\n// .attr(\"width\", function(d) {\n//  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n//  });\n//\n// rect.exit().remove();\n\n\n    svg.select('.x').transition().call(xAxis);\n    svg.select('.y').transition().call(yAxis);\n\n    return gantt;\n  };\n\n  gantt.margin = function(value) {\n    if (!arguments.length)\n      return margin;\n    margin = value;\n    return gantt;\n  };\n\n  gantt.timeDomain = function(value) {\n    if (!arguments.length)\n      return [ timeDomainStart, timeDomainEnd ];\n    timeDomainStart = +value[0], timeDomainEnd = +value[1];\n    return gantt;\n  };\n\n  /**\n   * @param {string}\n   *                value The value can be \"fit\" - the domain fits the data or\n   *                \"fixed\" - fixed domain.\n   */\n  gantt.timeDomainMode = function(value) {\n    if (!arguments.length)\n      return timeDomainMode;\n    timeDomainMode = value;\n    return gantt;\n  };\n\n  gantt.taskTypes = function(value) {\n    if (!arguments.length)\n      return taskTypes;\n    taskTypes = value;\n    return gantt;\n  };\n\n  gantt.taskStatus = function(value) {\n    if (!arguments.length)\n      return taskStatus;\n    taskStatus = value;\n    return gantt;\n  };\n\n  gantt.width = function(value) {\n    if (!arguments.length)\n      return width;\n    width = +value;\n    return gantt;\n  };\n\n  gantt.height = function(value) {\n    if (!arguments.length)\n      return height;\n    height = +value;\n    return gantt;\n  };\n\n  gantt.tickFormat = function(value) {\n    if (!arguments.length)\n      return tickFormat;\n    tickFormat = value;\n    return gantt;\n  };\n\n  gantt.selector = function(value) {\n    if (!arguments.length)\n      return selector;\n    selector = value;\n    return gantt;\n  };\n\n  return gantt;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/gantt-chart.js"],"sourceRoot":""}